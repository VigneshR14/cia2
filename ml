# -*- coding: utf-8 -*-
"""ML test

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dnILuQ67KQL1XcT5FO2fwHVuYGnjZgwZ
"""

import pandas as pd
import numpy as np
import os
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn import datasets
from sklearn.cluster import AgglomerativeClustering, DBSCAN
import warnings
warnings.filterwarnings('ignore')

df = pd.read_csv('iris.csv')

df.head()

df.info()

df.shape

df.describe()

X = df.drop('species',axis=1)
y = df['species']

# Histograms to check the normality assumption of the dependent variable (Sales)
df.hist(bins=20, figsize=(12, 9))

sns.pairplot(df,hue='species')

X_train, X_test,y_train,y_test = train_test_split(X,y,test_size=0.2, random_state=42)

classifiers = [
("Logistic Regression",LogisticRegression(max_iter=1000)),
("Decision Tree: ", DecisionTreeClassifier()),
("K-Nearest Neighbors",KNeighborsClassifier()),
("Naive Bayes",GaussianNB()),
("Random Forest",RandomForestClassifier()),
("K-Means",KMeans(n_clusters=3))
]

for name, classifier in classifiers:
  classifier.fit(X_train, y_train)
  y_pred = classifier.predict(X_test)
  accuracy = accuracy_score(y_test,y_pred)
  print(f"{name}: Accuracy={accuracy:.2f}")

agg_clustering = AgglomerativeClustering(n_clusters=3)
agg_labels = agg_clustering.fit_predict(X)

dbscan = DBSCAN(eps=0.5, min_samples=5)
dbscan_labels = dbscan.fit_predict(X)

plt.figure(figsize=(12, 5))

plt.subplot(121)
plt.scatter(X[:, 0], X[:, 1], c=agg_labels, cmap='rainbow')
plt.title('Agglomerative Clustering')

plt.subplot(122)

plt.scatter(X[:, 0], X[:, 1], c=dbscan_labels, cmap='rainbow')
plt.title('DBSCAN Clustering')
plt.show()
